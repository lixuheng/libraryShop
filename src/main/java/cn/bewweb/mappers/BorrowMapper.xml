<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.bewweb.dao.BorrowMapper">
	<resultMap id="BaseResultMap" type="cn.bewweb.entities.Borrow">
		<id column="borrow_id" property="borrowId" jdbcType="BIGINT" />
		<result column="user_id" property="userId" jdbcType="BIGINT" />
		<result column="goods_id" property="goodsId" jdbcType="BIGINT" />
		<result column="borrow_datetiem" property="borrowDatetiem"
			jdbcType="TIMESTAMP" />
		<result column="cost_per_borrow" property="costPerBorrow"
			jdbcType="DECIMAL" />
		<result column="entity_table" property="entityTable" jdbcType="VARCHAR" />
		<result column="entiry_id" property="entiryId" jdbcType="DECIMAL" />
		<result column="state" property="state" jdbcType="CHAR" />
		<result column="return_datetim" property="returnDatetim"
			jdbcType="TIMESTAMP" />
		<result column="note" property="note" jdbcType="VARCHAR" />
		<association javaType="cn.bewweb.entities.Goods" property="goods">
			<id column="goods_id" property="goodsId" jdbcType="BIGINT" />
			<result column="shop_id" property="shopId" jdbcType="BIGINT" />
			<result column="goods_name" property="goodsName" jdbcType="VARCHAR" />
			<result column="a_word_intro" property="aWordIntro" jdbcType="VARCHAR" />
			<result column="key_words" property="keyWords" jdbcType="VARCHAR" />
			<result column="goods_label" property="goodsLabel" jdbcType="VARCHAR" />
			<result column="in_stock" property="inStock" jdbcType="INTEGER" />
			<result column="copy_for_borrow" property="copyForBorrow"
				jdbcType="INTEGER" />
			<result column="original_price" property="originalPrice"
				jdbcType="DECIMAL" />
			<result column="income_price" property="incomePrice" jdbcType="DECIMAL" />
			<result column="price" property="price" jdbcType="DECIMAL" />
			<result column="discount" property="discount" jdbcType="DECIMAL" />
			<result column="in_sell_day" property="inSellDay" jdbcType="DATE" />
			<result column="category" property="category" jdbcType="CHAR" />
			<result column="goods_class" property="goodsClass" jdbcType="CHAR" />
			<result column="ratings" property="ratings" jdbcType="INTEGER" />
			<result column="entity_table" property="entityTable" jdbcType="VARCHAR" />
			<result column="entity_id" property="entityId" jdbcType="DECIMAL" />
			<result column="state" property="state" jdbcType="CHAR" />
			<result column="click_ok" property="clickOk" jdbcType="INTEGER" />
			<result column="click_middle" property="clickMiddle" jdbcType="INTEGER" />
			<result column="click_bad" property="clickBad" jdbcType="INTEGER" />
			<result column="view_count" property="viewCount" jdbcType="BIGINT" />
			<result column="today_view_count" property="todayViewCount"
				jdbcType="INTEGER" />
			<result column="today_sell" property="todaySell" jdbcType="INTEGER" />
			<result column="allsell" property="allsell" jdbcType="BIGINT" />
			<result column="tody_borrow" property="todyBorrow" jdbcType="INTEGER" />
			<result column="all_borrow" property="allBorrow" jdbcType="BIGINT" />
			<result column="all_care" property="allCare" jdbcType="BIGINT" />
			<result column="entry_folder" property="entryFolder" jdbcType="VARCHAR" />
		</association>

	</resultMap>


	<sql id="Base_Column_List">
		borrow_id, user_id, goods_id, borrow_datetiem, cost_per_borrow, entity_table,
		entiry_id,
		state, return_datetim, note
	</sql>
	
	<sql id="Base_Column_List_Goods">
		goods_id, shop_id, goods_name, a_word_intro, key_words,
		goods_label, in_stock,
		copy_for_borrow,
		original_price, income_price,
		price, discount, in_sell_day, category, goods_class,
		ratings,
		entity_table, entity_id, state, click_ok, click_middle,
		click_bad,
		view_count,
		today_view_count, today_sell, allsell, tody_borrow,
		all_borrow, all_care,entry_folder  
	</sql>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from trade_borrow
		where borrow_id = #{borrowId,jdbcType=BIGINT}
	</select>
	
	
	<select id="selectByUserWithGoods" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select 
		<include refid="Base_Column_List" /> ,
		<include refid="Base_Column_List_Goods"/> 
		from trade_borrow left josin trade_goods 
		on trade_borrow.goods_id =  trade_goods.goods_id  
		where user_id = #{userId,jdbcType=BIGINT}  
		and state=#{state,jdbcType=VARCHAR} 
	</select>


	<select id="getNoReturnNum" resultType="java.lang.Integer">
		select count(1)
		from trade_borrow
		where user_id = #{0} and (state=1 or state=2)
	</select>

	<select id="getNumByState" resultType="java.lang.Integer">
		select count(1)
		from trade_borrow
		where user_id = #{0} and state=#{1}
	</select>

	<select id="find" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from trade_borrow
		<where>
			<if test="param1 !=null and param1.borrowId != null">
				borrow_id = #{param1.borrowId}
			</if>
			<if test="param1 !=null and param1.userId != null">
				and user_id = #{param1.userId}
			</if>
			<if test="param1 !=null and param1.goodsId != null">
				and goods_id = #{param1.goodsId}
			</if>
			<if test="param1 !=null and param1.borrowDatetiem != null">
				and borrow_datetiem = #{param1.borrowDatetiem}
			</if>
			<if test="param1 !=null and param1.costPerBorrow != null">
				and cost_per_borrow = #{param1.costPerBorrow}
			</if>
			<if test="param1 !=null and param1.entityTable != null">
				and entity_table = #{param1.entityTable}
			</if>
			<if test="param1 !=null and param1.entiryId != null">
				and entiry_id = #{param1.entiryId}
			</if>
			<if test="param1 !=null and param1.state != null">
				and state = #{param1.state}
			</if>
			<if test="param1 !=null and param1.returnDatetim != null">
				and return_datetim = #{param1.returnDatetim}
			</if>
			<if test="param1 !=null and param1.note != null">
				and note like '%${param1.note}%'
			</if>
		</where>
		limit #{1},#{2}
	</select>


	<select id="findAndeOrderBy" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from trade_borrow
		<where>
			<if test="param1 !=null and param1.borrowId != null">
				borrow_id = #{param1.borrowId}
			</if>
			<if test="param1 !=null and param1.userId != null">
				and user_id = #{param1.userId}
			</if>
			<if test="param1 !=null and param1.goodsId != null">
				and goods_id = #{param1.goodsId}
			</if>
			<if test="param1 !=null and param1.borrowDatetiem != null">
				and borrow_datetiem = #{param1.borrowDatetiem}
			</if>
			<if test="param1 !=null and param1.costPerBorrow != null">
				and cost_per_borrow = #{param1.costPerBorrow}
			</if>
			<if test="param1 !=null and param1.entityTable != null">
				and entity_table = #{param1.entityTable}
			</if>
			<if test="param1 !=null and param1.entiryId != null">
				and entiry_id = #{param1.entiryId}
			</if>
			<if test="param1 !=null and param1.state != null">
				and state = #{param1.state}
			</if>
			<if test="param1 !=null and param1.returnDatetim != null">
				and return_datetim = #{param1.returnDatetim}
			</if>
			<if test="param1 !=null and param1.note != null">
				and note like '%${param1.note}%'
			</if>
		</where>
		order by #{1}
		limit #{2},#{3}
	</select>
	
	
		<select id="findAndeOrderByWithGoods" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" /> ,
		<include refid="Base_Column_List_Goods" />
		from trade_borrow left join trade_goods 
		on trade_borrow.goods_id = trade_goods.goods_id 
		<where>
			<if test="param1 !=null and param1.borrowId != null">
				borrow_id = #{param1.borrowId}
			</if>
			<if test="param1 !=null and param1.userId != null">
				and user_id = #{param1.userId}
			</if>
			<if test="param1 !=null and param1.goodsId != null">
				and goods_id = #{param1.goodsId}
			</if>
			<if test="param1 !=null and param1.borrowDatetiem != null">
				and borrow_datetiem = #{param1.borrowDatetiem}
			</if>
			<if test="param1 !=null and param1.costPerBorrow != null">
				and cost_per_borrow = #{param1.costPerBorrow}
			</if>
			<if test="param1 !=null and param1.entityTable != null">
				and entity_table = #{param1.entityTable}
			</if>
			<if test="param1 !=null and param1.entiryId != null">
				and entiry_id = #{param1.entiryId}
			</if>
			<if test="param1 !=null and param1.state != null">
				and state = #{param1.state}
			</if>
			<if test="param1 !=null and param1.returnDatetim != null">
				and return_datetim = #{param1.returnDatetim}
			</if>
			<if test="param1 !=null and param1.note != null">
				and note like '%${param1.note}%'
			</if>
		</where>
		order by #{1}
		limit #{2},#{3}
	</select>


	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from trade_borrow
		where borrow_id = #{borrowId,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="cn.bewweb.entities.Borrow">
		insert into trade_borrow (borrow_id, user_id, goods_id,
		borrow_datetiem, cost_per_borrow, entity_table,
		entiry_id, state, return_datetim,
		note)
		values (#{borrowId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT},
		#{goodsId,jdbcType=BIGINT},
		#{borrowDatetiem,jdbcType=TIMESTAMP}, #{costPerBorrow,jdbcType=DECIMAL}, #{entityTable,jdbcType=VARCHAR},
		#{entiryId,jdbcType=DECIMAL}, #{state,jdbcType=CHAR},
		#{returnDatetim,jdbcType=TIMESTAMP},
		#{note,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="cn.bewweb.entities.Borrow">
		insert into trade_borrow
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="borrowId != null">
				borrow_id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="goodsId != null">
				goods_id,
			</if>
			<if test="borrowDatetiem != null">
				borrow_datetiem,
			</if>
			<if test="costPerBorrow != null">
				cost_per_borrow,
			</if>
			<if test="entityTable != null">
				entity_table,
			</if>
			<if test="entiryId != null">
				entiry_id,
			</if>
			<if test="state != null">
				state,
			</if>
			<if test="returnDatetim != null">
				return_datetim,
			</if>
			<if test="note != null">
				note,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="borrowId != null">
				#{borrowId,jdbcType=BIGINT},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=BIGINT},
			</if>
			<if test="goodsId != null">
				#{goodsId,jdbcType=BIGINT},
			</if>
			<if test="borrowDatetiem != null">
				#{borrowDatetiem,jdbcType=TIMESTAMP},
			</if>
			<if test="costPerBorrow != null">
				#{costPerBorrow,jdbcType=DECIMAL},
			</if>
			<if test="entityTable != null">
				#{entityTable,jdbcType=VARCHAR},
			</if>
			<if test="entiryId != null">
				#{entiryId,jdbcType=DECIMAL},
			</if>
			<if test="state != null">
				#{state,jdbcType=CHAR},
			</if>
			<if test="returnDatetim != null">
				#{returnDatetim,jdbcType=TIMESTAMP},
			</if>
			<if test="note != null">
				#{note,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="cn.bewweb.entities.Borrow">
		update trade_borrow
		<set>
			<if test="userId != null">
				user_id = #{userId,jdbcType=BIGINT},
			</if>
			<if test="goodsId != null">
				goods_id = #{goodsId,jdbcType=BIGINT},
			</if>
			<if test="borrowDatetiem != null">
				borrow_datetiem = #{borrowDatetiem,jdbcType=TIMESTAMP},
			</if>
			<if test="costPerBorrow != null">
				cost_per_borrow = #{costPerBorrow,jdbcType=DECIMAL},
			</if>
			<if test="entityTable != null">
				entity_table = #{entityTable,jdbcType=VARCHAR},
			</if>
			<if test="entiryId != null">
				entiry_id = #{entiryId,jdbcType=DECIMAL},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=CHAR},
			</if>
			<if test="returnDatetim != null">
				return_datetim = #{returnDatetim,jdbcType=TIMESTAMP},
			</if>
			<if test="note != null">
				note = #{note,jdbcType=VARCHAR},
			</if>
		</set>
		where borrow_id = #{borrowId,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="cn.bewweb.entities.Borrow">
		update trade_borrow
		set user_id = #{userId,jdbcType=BIGINT},
		goods_id = #{goodsId,jdbcType=BIGINT},
		borrow_datetiem = #{borrowDatetiem,jdbcType=TIMESTAMP},
		cost_per_borrow = #{costPerBorrow,jdbcType=DECIMAL},
		entity_table = #{entityTable,jdbcType=VARCHAR},
		entiry_id = #{entiryId,jdbcType=DECIMAL},
		state = #{state,jdbcType=CHAR},
		return_datetim = #{returnDatetim,jdbcType=TIMESTAMP},
		note = #{note,jdbcType=VARCHAR}
		where borrow_id = #{borrowId,jdbcType=BIGINT}
	</update>
</mapper>