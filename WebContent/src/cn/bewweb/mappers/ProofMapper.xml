<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.bewweb.dao.ProofMapper">
	<resultMap id="BaseResultMap" type="cn.bewweb.entities.Proof">
		<id column="proof_id" property="proofId" jdbcType="BIGINT" />
		<result column="user_id" property="userId" jdbcType="BIGINT" />
		<result column="proof_category" property="proofCategory"
			jdbcType="VARCHAR" />
		<result column="proof_type" property="proofType" jdbcType="VARCHAR" />
		<result column="session_id" property="sessionId" jdbcType="VARCHAR" />
		<result column="proof_name" property="proofName" jdbcType="VARCHAR" />
		<result column="proof_value" property="proofValue" jdbcType="VARCHAR" />
		<result column="record_time" property="recordTime" jdbcType="DATE" />
		<result column="note" property="note" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		proof_id, user_id, proof_category, proof_type, session_id,
		proof_name,
		proof_value,
		record_time, note
	</sql>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from control_proof
		where proof_id = #{proofId,jdbcType=BIGINT}
	</select>
	
	<select id="findProofByUserByInterval" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from control_proof
		where user_id = #{userId,jdbcType=BIGINT} 
		and record_time &gt; #{beginDate,javaType=DATE} 
		and record_tiem &lt; #{endDate,javaType=DATE} 
		limit #{startInt},#{endInt} 
	</select>
	

	<select id="findProofByUserAndOrderByDateByInterval" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from control_proof
		where user_id = #{userId,jdbcType=BIGINT} 
		and record_time &gt; #{beginDate,javaType=DATE} 
		and record_tiem &lt; #{endDate,javaType=DATE} 
		order by #{method} 
		limit #{startInt},#{endInt} 
	</select>

	<select id="find" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from control_proof
		<where>
			<if test="param1!=null and param1.userId != null">
				user_id = #{param1.userId,jdbcType=BIGINT},
			</if>
			<if test="param1!=null and param1.proofCategory != null">
				and proof_category =
				#{param1.proofCategory,jdbcType=VARCHAR},
			</if>
			<if test="param1!=null and param1.proofType != null">
				and proof_type = #{param1.proofType,jdbcType=VARCHAR},
			</if>
			<if test="param1!=null and param1.sessionId != null">
				and session_id = #{param1.sessionId,jdbcType=VARCHAR},
			</if>
			<if test="param1!=null and param1.proofName != null">
				and proof_name = #{param1.proofName,jdbcType=VARCHAR},
			</if>
			<if test="param1!=null and param1.proofValue != null">
				and proof_value = #{param1.proofValue,jdbcType=VARCHAR},
			</if>
			<if test="param1!=null and param1.recordTime != null">
				and record_time = #{param1.recordTime,jdbcType=DATE},
			</if>
			<if test="param1 !=null and param.note != null">
				and note = #{param1.note,jdbcType=VARCHAR},
			</if>
		</where>
		limit #{1},#{2}
	</select>

	<select id="findAndOrdeBy" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from control_proof
		<where>
			<if test="param1!=null and param1.userId != null">
				user_id = #{param1.userId,jdbcType=BIGINT},
			</if>
			<if test="param1!=null and param1.proofCategory != null">
				and proof_category =
				#{param1.proofCategory,jdbcType=VARCHAR},
			</if>
			<if test="param1!=null and param1.proofType != null">
				and proof_type = #{param1.proofType,jdbcType=VARCHAR},
			</if>
			<if test="param1!=null and param1.sessionId != null">
				and session_id = #{param1.sessionId,jdbcType=VARCHAR},
			</if>
			<if test="param1!=null and param1.proofName != null">
				and proof_name = #{param1.proofName,jdbcType=VARCHAR},
			</if>
			<if test="param1!=null and param1.proofValue != null">
				and proof_value = #{param1.proofValue,jdbcType=VARCHAR},
			</if>
			<if test="param1!=null and param1.recordTime != null">
				and record_time = #{param1.recordTime,jdbcType=DATE},
			</if>
			<if test="param1 !=null and param.note != null">
				and note = #{param1.note,jdbcType=VARCHAR},
			</if>
		</where>
		order by #{1}
		limit #{2},#{3}
	</select>



	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from
		control_proof
		where proof_id = #{proofId,jdbcType=BIGINT}
	</delete>
	<delete id="delProofByUser" parameterType="java.lang.Long">
		delete from
		control_proof
		where user_id = #{userId,jdbcType=BIGINT}
	</delete>
	<delete id="delProofByDateInterval" parameterType="java.util.Date">
		delete from
		control_proof
		where record_time &gt; #{0} and record_time &lt; #{1}
	</delete>
	<delete id="delProofBySession" parameterType="java.lang.String">
		delete from
		control_proof
		where sessionId = #{0}
	</delete>
	<insert id="insert" parameterType="cn.bewweb.entities.Proof">
		insert into control_proof
		(proof_id, user_id, proof_category,
		proof_type, session_id, proof_name,
		proof_value, record_time, note
		)
		values (#{proofId,jdbcType=BIGINT},
		#{userId,jdbcType=BIGINT},
		#{proofCategory,jdbcType=VARCHAR},
		#{proofType,jdbcType=VARCHAR}, #{sessionId,jdbcType=VARCHAR},
		#{proofName,jdbcType=VARCHAR},
		#{proofValue,jdbcType=VARCHAR},
		#{recordTime,jdbcType=DATE},
		#{note,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="cn.bewweb.entities.Proof">
		insert into control_proof
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="proofId != null">
				proof_id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="proofCategory != null">
				proof_category,
			</if>
			<if test="proofType != null">
				proof_type,
			</if>
			<if test="sessionId != null">
				session_id,
			</if>
			<if test="proofName != null">
				proof_name,
			</if>
			<if test="proofValue != null">
				proof_value,
			</if>
			<if test="recordTime != null">
				record_time,
			</if>
			<if test="note != null">
				note,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="proofId != null">
				#{proofId,jdbcType=BIGINT},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=BIGINT},
			</if>
			<if test="proofCategory != null">
				#{proofCategory,jdbcType=VARCHAR},
			</if>
			<if test="proofType != null">
				#{proofType,jdbcType=VARCHAR},
			</if>
			<if test="sessionId != null">
				#{sessionId,jdbcType=VARCHAR},
			</if>
			<if test="proofName != null">
				#{proofName,jdbcType=VARCHAR},
			</if>
			<if test="proofValue != null">
				#{proofValue,jdbcType=VARCHAR},
			</if>
			<if test="recordTime != null">
				#{recordTime,jdbcType=DATE},
			</if>
			<if test="note != null">
				#{note,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="cn.bewweb.entities.Proof">
		update control_proof
		<set>
			<if test="userId != null">
				user_id = #{userId,jdbcType=BIGINT},
			</if>
			<if test="proofCategory != null">
				proof_category = #{proofCategory,jdbcType=VARCHAR},
			</if>
			<if test="proofType != null">
				proof_type = #{proofType,jdbcType=VARCHAR},
			</if>
			<if test="sessionId != null">
				session_id = #{sessionId,jdbcType=VARCHAR},
			</if>
			<if test="proofName != null">
				proof_name = #{proofName,jdbcType=VARCHAR},
			</if>
			<if test="proofValue != null">
				proof_value = #{proofValue,jdbcType=VARCHAR},
			</if>
			<if test="recordTime != null">
				record_time = #{recordTime,jdbcType=DATE},
			</if>
			<if test="note != null">
				note = #{note,jdbcType=VARCHAR},
			</if>
		</set>
		where proof_id = #{proofId,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="cn.bewweb.entities.Proof">
		update
		control_proof
		set user_id = #{userId,jdbcType=BIGINT},
		proof_category =
		#{proofCategory,jdbcType=VARCHAR},
		proof_type =
		#{proofType,jdbcType=VARCHAR},
		session_id =
		#{sessionId,jdbcType=VARCHAR},
		proof_name =
		#{proofName,jdbcType=VARCHAR},
		proof_value =
		#{proofValue,jdbcType=VARCHAR},
		record_time =
		#{recordTime,jdbcType=DATE},
		note = #{note,jdbcType=VARCHAR}
		where
		proof_id = #{proofId,jdbcType=BIGINT}
	</update>
</mapper>